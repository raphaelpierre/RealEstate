name: iOS starter workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app
      
      - name: Show Xcode Version
        run: xcodebuild -version
        
      - name: List Available Simulators
        run: xcrun simctl list devices
        
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json 2>/dev/null || echo "{}")
          if [ -z "$scheme_list" ]; then
            scheme_list="{}"
          fi
          default=$(echo "$scheme_list" | ruby -e "require 'json'; begin; puts JSON.parse(STDIN.gets)['project']['targets'][0]; rescue; puts 'RealEstate'; end")
          echo "$default" | cat >default
          echo "Using default scheme: $default"
          
      - name: Debug Project Files
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Project files:"
          find . -name "*.xcodeproj" -o -name "*.xcworkspace"
          
      - name: Validate Project
        run: |
          if [ -d "*.xcworkspace" ]; then 
            filetype_parameter="workspace"
            file_to_build=$(find . -name "*.xcworkspace" -type d | head -1)
          else 
            filetype_parameter="project"
            file_to_build=$(find . -name "*.xcodeproj" -type d | head -1)
          fi
          
          if [ -z "$file_to_build" ]; then
            echo "Error: No Xcode project or workspace found"
            exit 1
          fi
          
          echo "Validating $filetype_parameter: $file_to_build"
          xcodebuild -list -"$filetype_parameter" "$file_to_build" || true
          
      - name: Clean Derived Data
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
          
      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
          destination: 'platform=iOS Simulator,name=iPhone 14,OS=16.4'
        run: |
          if [ "$scheme" = "default" ]; then 
            scheme=$(cat default)
          fi
          echo "Using scheme: $scheme"
          
          if [ -d "*.xcworkspace" ]; then 
            filetype_parameter="workspace"
            file_to_build=$(find . -name "*.xcworkspace" -type d | head -1)
          else 
            filetype_parameter="project"
            file_to_build=$(find . -name "*.xcodeproj" -type d | head -1)
          fi
          
          if [ -z "$file_to_build" ]; then
            echo "Error: No Xcode project or workspace found"
            exit 1
          fi
          
          echo "Building with $filetype_parameter: $file_to_build"
          
          # Clean build folder first
          xcodebuild clean -scheme "$scheme" -"$filetype_parameter" "$file_to_build" || true
          
          # Build with minimal settings
          xcodebuild build \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "$destination" \
            -configuration Debug \
            -derivedDataPath ~/Library/Developer/Xcode/DerivedData \
            -verbose \
            IPHONEOS_DEPLOYMENT_TARGET=16.4 \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            ENABLE_BITCODE=NO \
            ONLY_ACTIVE_ARCH=YES \
            VALIDATE_WORKSPACE=NO \
            BUILD_LIBRARY_FOR_DISTRIBUTION=NO \
            SWIFT_ACTIVE_COMPILATION_CONDITIONS=DEBUG \
            DEBUG_INFORMATION_FORMAT=dwarf \
            MTL_ENABLE_DEBUG_INFO=INCLUDE_SOURCE \
            MTL_FAST_MATH=YES || {
              echo "Build failed with exit code $?"
              exit 1
            }
          
      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
          destination: 'platform=iOS Simulator,name=iPhone 14,OS=16.4'
        run: |
          if [ "$scheme" = "default" ]; then 
            scheme=$(cat default)
          fi
          echo "Using scheme: $scheme"
          
          if [ -d "*.xcworkspace" ]; then 
            filetype_parameter="workspace"
            file_to_build=$(find . -name "*.xcworkspace" -type d | head -1)
          else 
            filetype_parameter="project"
            file_to_build=$(find . -name "*.xcodeproj" -type d | head -1)
          fi
          
          if [ -z "$file_to_build" ]; then
            echo "Error: No Xcode project or workspace found"
            exit 1
          fi
          
          echo "Testing with $filetype_parameter: $file_to_build"
          
          # Test with minimal settings
          xcodebuild test \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "$destination" \
            -configuration Debug \
            -derivedDataPath ~/Library/Developer/Xcode/DerivedData \
            -verbose \
            IPHONEOS_DEPLOYMENT_TARGET=16.4 \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            ENABLE_BITCODE=NO \
            ONLY_ACTIVE_ARCH=YES \
            VALIDATE_WORKSPACE=NO \
            BUILD_LIBRARY_FOR_DISTRIBUTION=NO \
            SWIFT_ACTIVE_COMPILATION_CONDITIONS=DEBUG \
            DEBUG_INFORMATION_FORMAT=dwarf \
            MTL_ENABLE_DEBUG_INFO=INCLUDE_SOURCE \
            MTL_FAST_MATH=YES || {
              echo "Test failed with exit code $?"
              exit 1
            }
